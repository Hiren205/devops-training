AWSTemplateFormatVersion: "2010-09-09"
Description: Main stack for EC2, Lambda, Roles

Parameters:
  ProjectName:
    Type: String
    Default: calculator
  GitHubRepo:
    Type: String
    Default: Hiren205/devops_cicd
  GitHubBranch:
    Type: String
    Default: main
  GitHubToken:
    Type: String
    Default: github-token
  EC2KeyPair:
    Type: String
    Default: calculator-key-pair

Resources:
  DeploymentBucket:
    Type: AWS::S3::Bucket
    Properties:
      BucketName: !Sub "${ProjectName}-deployment-${AWS::AccountId}-${AWS::Region}"

  IAMRolesStack:
    Type: AWS::CloudFormation::Stack
    Properties:
      TemplateURL: https://calculator-first-cicd-bucket.s3.us-east-1.amazonaws.com/roles.yml

  CodeBuildStack:
    Type: AWS::CloudFormation::Stack
    Properties:
      TemplateURL: https://calculator-first-cicd-bucket.s3.us-east-1.amazonaws.com/codebuild.yml
      Parameters:
        ProjectName: !Ref ProjectName
        DeploymentBucket: !Ref DeploymentBucket
        CodeBuildServiceRoleArn: !GetAtt IAMRolesStack.Outputs.CodeBuildServiceRoleArn

  # LambdaStack:
  #   Type: AWS::CloudFormation::Stack
  #   DependsOn: IAMRolesStack
  #   Properties:
  #     TemplateURL: https://calculator-first-cicd-bucket.s3.us-east-1.amazonaws.com/lambda-deploy.yml
  #     Parameters:
  #       ProjectName: !Ref ProjectName
  #       DeploymentBucket: !Ref DeploymentBucket

  #   # Security Group allowing SSH and HTTP from anywhere
  EC2SecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: !Sub "${ProjectName} - Allow SSH (22) and HTTP (80)"
      GroupName: !Sub "${ProjectName}-sg"
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: 22
          ToPort: 22
          CidrIp: 0.0.0.0/0
        - IpProtocol: tcp
          FromPort: 80
          ToPort: 80
          CidrIp: 0.0.0.0/0

  # EC2 Instance
  EC2Instance:
    Type: AWS::EC2::Instance
    Properties:
      InstanceType: t3.micro # or t4g.micro if supported in your region
      ImageId: ami-0c02fb55956c7d316
      KeyName: !Ref EC2KeyPair
      SecurityGroupIds:
        - !Ref EC2SecurityGroup
      Tags:
        - Key: Name
          Value: !Sub "${ProjectName}-ec2"
      UserData:
        Fn::Base64: !Sub |
          #!/bin/bash
          sudo yum update -y
          sudo yum install -y httpd
          sudo systemctl enable httpd
          sudo systemctl start httpd

  PipelineStack:
    Type: AWS::CloudFormation::Stack
    Properties:
      TemplateURL: https://s3.amazonaws.com/calculator-first-cicd-bucket/pipeline.yml
      Parameters:
        ProjectName: !Ref ProjectName
        GitHubRepo: !Ref GitHubRepo
        GitHubBranch: !Ref GitHubBranch
        GitHubToken: !Sub "{{resolve:ssm:${GitHubToken}}}"
        ArtifactBucket: !Ref DeploymentBucket
        CodePipelineServiceRoleArn: !GetAtt IAMRolesStack.Outputs.CodePipelineServiceRoleArn
        CodeBuildProjectName: !GetAtt CodeBuildStack.Outputs.CodeBuildProjectName

Outputs:
  InstancePublicIP:
    Description: Public IP of the EC2 instance
    Value: !GetAtt EC2Instance.PublicIp

  InstancePublicDNS:
    Description: Public DNS of the EC2 instance
    Value: !GetAtt EC2Instance.PublicDnsName

  KeyPairName:
    Description: EC2 KeyPair Name (download PEM separately from AWS Console/CLI)
    Value: !Ref EC2KeyPair
